/*
 * Generated by orval v5.4.10 üç∫
 * Do not edit manually.
 * Swagger Petstore
 * OpenAPI spec version: 1.0.0
 */
import {
  HttpClient,
  HttpHeaders,
  HttpParams
} from '@angular/common/http'
import {
  Injectable
} from '@angular/core'
import {
  Observable
} from 'rxjs'
import type {
  Pets,
  ListPetsParams,
  CreatePetsBody,
  Pet
} from '../../model'
import listPetsMutator from '../../mutator/response-type'


type HttpClientOptions = {
  headers?: HttpHeaders | {
      [header: string]: string | string[];
  };
  observe?: any;
  params?: HttpParams | {
      [param: string]: string | string[];
  };
  reportProgress?: boolean;
  responseType?: any;
  withCredentials?: boolean;
}

type ThirdParameter<T extends (...args: any) => any> = T extends (
  config: any,
  httpClient: any,
  args: infer P,
) => any
  ? P
  : never;

@Injectable()
export class PetsService {
  constructor(
    private http: HttpClient,
  ) {} listPets<TData = Pets>(
    params?: ListPetsParams,
    version= 1,
 options?: ThirdParameter<typeof listPetsMutator>) {
      return listPetsMutator<TData>(
      {url: `/v${version}/pets`, method: 'get',
        params,
    },
      this.http,
      // eslint-disable-next-line
// @ts-ignore
 options);
    }
   createPets<TData = unknown>(
    createPetsBody: CreatePetsBody,
    version= 1, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.post<TData>(
      `/v${version}/pets`,
      createPetsBody,options
    );
  }
 showPetById<TData = Pet>(
    petId: string,
    version= 1, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `/v${version}/pets/${petId}`,options
    );
  }
};
