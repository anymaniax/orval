/**
 * Generated by orval v6.6.4 🍺
 * Do not edit manually.
 * Swagger Petstore
 * OpenAPI spec version: 1.0.0
 */
import {
  rest
} from 'msw'
import {
  faker
} from '@faker-js/faker'

export const getListPetsMock = () => ([...Array(faker.datatype.number({min: 1, max: 10}))].map(() => ({'@id': faker.helpers.randomize([faker.random.word(), undefined]), id: (()=>import_faker.faker.datatype.number({min:1,max:99999}))(), name: (()=>import_faker.faker.name.lastName())(), tag: (()=>import_faker.faker.name.lastName())(), email: faker.helpers.randomize([faker.internet.email(), undefined]), callingCode: faker.helpers.randomize([faker.helpers.randomize(['+33','+420','+33']), undefined]), country: faker.helpers.randomize([faker.helpers.randomize(['People\'s Republic of China','Uruguay']), undefined])})))

export const getCreatePetsMock = () => ({'@id': faker.helpers.randomize([faker.random.word(), undefined]), id: faker.datatype.number(), name: (()=>import_faker.faker.name.lastName())(), tag: (()=>import_faker.faker.name.lastName())(), email: faker.helpers.randomize([faker.internet.email(), undefined]), callingCode: faker.helpers.randomize([faker.helpers.randomize(['+33','+420','+33']), undefined]), country: faker.helpers.randomize([faker.helpers.randomize(['People\'s Republic of China','Uruguay']), undefined])})

export const getShowPetByIdMock = () => ((()=>({id:import_faker.faker.datatype.number({min:1,max:99}),name:import_faker.faker.name.firstName(),tag:import_faker.faker.helpers.randomize([import_faker.faker.random.word(),void 0])}))())

export const getSwaggerPetstoreMSW = () => [
rest.get('*/v:version/pets', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getListPetsMock()),
        )
      }),rest.post('*/v:version/pets', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getCreatePetsMock()),
        )
      }),rest.get('*/v:version/pets/:petId', (_req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
ctx.json(getShowPetByIdMock()),
        )
      }),]
